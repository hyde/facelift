
/* Thanks: https://github.com/visionmedia/nib */

support-for-ie    ?= false
vendor-prefixes   ?= webkit moz official
no-wrap = unquote('nowrap')

vendor(prop, args, only = null, ignore = null)
  for prefix in vendor-prefixes
    unless (only and !(prefix in only)) or (ignore and prefix in ignore)
      if official == prefix
        {prop}: args
      else
        {'-' + prefix + '-' + prop}: args

opacity(n)
  opacity: n
  if support-for-ie
    filter: 'progid:DXImageTransform.Microsoft.Alpha(Opacity=%s)' % round(n * 100)

box-shadow()
  vendor('box-shadow', arguments)

user-select()
  vendor('user-select', arguments)

column-count()
  vendor('column-count', arguments)

column-gap()
  vendor('column-gap', arguments)

column-rule()
  vendor('column-rule', arguments)

column-rule-color()
  vendor('column-rule-color', arguments)

column-rule-width()
  vendor('column-rule-width', arguments)

column-rule-style()
  vendor('column-rule-style', arguments)

column-width()
  vendor('column-width', arguments)

background-size()
  vendor('background-size', arguments)

transform()
  vendor('transform', arguments)

border-image()
  vendor('border-image', arguments)

transition()
  vendor('transition', arguments)

transition-property()
  vendor('transition-property', arguments)

transition-duration()
  vendor('transition-duration', arguments)

transition-timing-function()
  vendor('transition-timing-function', arguments)

transition-delay()
  vendor('transition-delay', arguments)

backface-visibility()
  vendor('backface-visibility', arguments)

box-sizing()
  vendor('box-sizing', arguments)

box-orient()
  vendor('box-orient', arguments)

box-flex()
  vendor('box-flex', arguments)

box-flex-group()
  vendor('box-flex-group', arguments)

box-align()
  vendor('box-align', arguments)

box-pack()
  vendor('box-pack', arguments)

box-direction()
  vendor('box-direction', arguments)

animation()
  vendor('animation', arguments)

animation-name()
  vendor('animation-name', arguments)

animation-duration()
  vendor('animation-duration', arguments)

animation-delay()
  vendor('animation-delay', arguments)

animation-direction()
  vendor('animation-direction', arguments)

animation-iteration-count()
  vendor('animation-iteration-count', arguments)

animation-timing-function()
  vendor('animation-timing-function', arguments)

animation-play-state()
  vendor('animation-play-state', arguments)

animation-fill-mode()
  vendor('animation-fill-mode', arguments)

border-image()
  vendor('border-image', arguments)

hyphens()
  vendor('hyphens', arguments)

appearance()
  vendor('appearance', arguments)

/*
 * Helper for border-radius().
 */

-apply-border-radius(pos)
  if length(pos) == 3
    // border-radius: <top | buttom> <left | right> <n>
    y = pos[0]
    x = pos[1]
    vendor('border-radius-%s%s' % pos, pos[2], only: moz)
    vendor('border-%s-%s-radius' % pos, pos[2], ignore: moz)
  else if pos[0] in (top bottom)
    // border-radius: <top | bottom> <n>
    -apply-border-radius(pos[0] left pos[1])
    -apply-border-radius(pos[0] right pos[1])
  else if pos[0] in (left right)
    // border-radius: <left | right> <n>
    unshift(pos, top);
    -apply-border-radius(pos)
    pos[0] = bottom
    -apply-border-radius(pos)

/*
 * border-radius supporting vendor prefixes and
 * augmented behavior.
 *
 * Examples:
 *
 *    border-radius: 2px 5px
 *    border-radius: top 5px bottom 10px
 *    border-radius: left 5px
 *    border-radius: top left 5px
 *    border-radius: top left 10px bottom right 5px
 *    border-radius: top left 10px, bottom right 5px
 *
 */
border-radius()
  pos = ()
  augmented = false
  for args in arguments
    for arg in args
      if arg is a 'ident'
        append(pos, arg)
        augmented = true
      else
        append(pos, arg)
        if augmented
          -apply-border-radius(pos)
          pos = ()
  vendor('border-radius', pos) unless augmented


/*
  - The most minimal syntax
  - Uses opacity, background-color can be combined -> modular

  linear-gradient #c
  linear-gradient #c #f
  linear-gradient #c #f 100%
*/
linear-gradient(topColor = rgba(#0, .15), bottomColor = transparent, stop = 50%)
  for prefix in moz webkit ms o
    background-image: '-%s-linear-gradient(top, %s, %s %s)' % (prefix topColor bottomColor stop)


radial-gradient(from = #f9, to = darken(from, 10), size = 50%)
  background from
  background -moz-radial-gradient(center, from, to) no-repeat to
  background -webkit-gradient(radial, size size, 0, size size, 500, from(from), to(to)) no-repeat to

